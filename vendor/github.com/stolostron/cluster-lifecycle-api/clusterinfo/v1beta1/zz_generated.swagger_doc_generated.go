package v1beta1

// This file contains a collection of methods that can be used from go-restful to
// generate Swagger API documentation for its models. Please read this PR for more
// information on the implementation: https://github.com/emicklei/go-restful/pull/215
//
// TODOs are ignored from the parser (e.g. TODO(andronat):... || TODO:...) if and only if
// they are on one line! For multiple line or blocks that you want to ignore use ---.
// Any context after a --- is ignored.
//
// Those methods can be generated by using hack/update-swagger-docs.sh

// AUTO-GENERATED FUNCTIONS START HERE
var map_ClientConfig = map[string]string{
	"url":      "URL is the URL of apiserver endpoint of the managed cluster.",
	"caBundle": "CABundle is the ca bundle to connect to apiserver of the managed cluster. System certs are used if it is not set.",
}

func (ClientConfig) SwaggerDoc() map[string]string {
	return map_ClientConfig
}

var map_ClusterInfoSpec = map[string]string{
	"":               "ClusterInfoSpec is information about the current status of a managed cluster updated by ManagedClusterInfo controller periodically.",
	"loggingCA":      "LoggingCA is the ca data for logging server to authorize apiserver",
	"masterEndpoint": "MasterEndpoint shows the apiserver endpoint of managed cluster",
}

func (ClusterInfoSpec) SwaggerDoc() map[string]string {
	return map_ClusterInfoSpec
}

var map_ClusterInfoStatus = map[string]string{
	"":                 "ClusterInfoStatus is the information about managed cluster",
	"conditions":       "Conditions contains condition information for a managed cluster",
	"version":          "Version is the kube version of managed cluster.",
	"kubeVendor":       "KubeVendor describes the kubernetes provider of the managed cluster. Deprecated in release 2.3 and will be removed in the future. Use clusterClaim platform.open-cluster-management.io instead.",
	"cloudVendor":      "CloudVendor describes the cloud provider for the managed cluster. Deprecated in release 2.3 and will be removed in the future. Use clusterClaim product.open-cluster-management.io instead.",
	"clusterID":        "ClusterID is the identifier of managed cluster. Deprecated in release 2.3 and will be removed in the future. Use clusterClaim id.openshift.io instead.",
	"distributionInfo": "DistributionInfo is the information about distribution of managed cluster",
	"consoleURL":       "ConsoleURL shows the url of console in managed cluster. Deprecated in release 2.3 and will be removed in the future. Use clusterClaim consoleurl.cluster.open-cluster-management.io instead.",
	"nodeList":         "NodeList shows a list of the status of nodes",
	"loggingEndpoint":  "LoggingEndpoint shows the endpoint to connect to logging server of managed cluster",
	"loggingPort":      "LoggingPort shows the port to connect to logging server of managed cluster",
}

func (ClusterInfoStatus) SwaggerDoc() map[string]string {
	return map_ClusterInfoStatus
}

var map_DistributionInfo = map[string]string{
	"":     "DistributionInfo defines the information about distribution of managed cluster",
	"type": "Type is the distribution type of managed cluster, is OCP currently",
	"ocp":  "OCP is the distribution information of OCP managed cluster, is matched when the Type is OCP.",
}

func (DistributionInfo) SwaggerDoc() map[string]string {
	return map_DistributionInfo
}

var map_ManagedClusterInfo = map[string]string{
	"":       "ManagedClusterInfo represents the information of managed cluster that acm hub needs to know",
	"spec":   "Spec defines the information of the Cluster.",
	"status": "Status represents the desired status of the Cluster",
}

func (ManagedClusterInfo) SwaggerDoc() map[string]string {
	return map_ManagedClusterInfo
}

var map_ManagedClusterInfoList = map[string]string{
	"":         "ManagedClusterInfoList is a list of ManagedClusterInfo objects",
	"metadata": "Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds",
	"items":    "List of ManagedClusterInfo objects.",
}

func (ManagedClusterInfoList) SwaggerDoc() map[string]string {
	return map_ManagedClusterInfoList
}

var map_NodeCondition = map[string]string{
	"type":   "Type of node condition.",
	"status": "Status of the condition, one of True, False, Unknown.",
}

func (NodeCondition) SwaggerDoc() map[string]string {
	return map_NodeCondition
}

var map_NodeStatus = map[string]string{
	"":           "NodeStatus presents the name, labels and conditions of node",
	"name":       "Name of node",
	"labels":     "Labels of node.",
	"capacity":   "Capacity represents the total resources of a node. only includes CPU and memory.",
	"conditions": "Conditions is an array of current node conditions. only includes NodeReady.",
}

func (NodeStatus) SwaggerDoc() map[string]string {
	return map_NodeStatus
}

var map_OCPDistributionInfo = map[string]string{
	"":                           "OCPDistributionInfo defines the distribution information of OCP managed cluster",
	"version":                    "Version is the current version of the OCP cluster. Deprecated in release 2.3 and will be removed in the future. Use clusterClaim version.openshift.io instead.",
	"availableUpdates":           "AvailableUpdates contains the list of update versions that are appropriate for the manage cluster. Deprecated in release 2.3 and will be removed in the future. Use VersionAvailableUpdates instead.",
	"desiredVersion":             "DesiredVersion is the version that the cluster is reconciling towards. Deprecated in release 2.3 and will be removed in the future. User Desired instead.",
	"upgradeFailed":              "UpgradeFailed indicates whether upgrade of the manage cluster is failed. This is true if the status of Failing condition is True and the version is different with desiredVersion in clusterVersion",
	"channel":                    "Channel is an identifier for explicitly requesting that a non-default set of updates be applied to this cluster. The default channel will be contain stable updates that are appropriate for production clusters.",
	"desired":                    "desired is the version that the cluster is reconciling towards. If the cluster is not yet fully initialized desired will be set with the information available, which may be an image or a tag.",
	"versionAvailableUpdates":    "VersionAvailableUpdates contains the list of updates that are appropriate for this cluster. This list may be empty if no updates are recommended, if the update service is unavailable, or if an invalid channel has been specified.",
	"versionHistory":             "VersionHistory contains a list of the most recent versions applied to the cluster. This value may be empty during cluster startup, and then will be updated when a new update is being applied. The newest update is first in the list and it is ordered by recency. Updates in the history have state Completed if the rollout completed - if an update was failing or halfway applied the state will be Partial. Only a limited amount of update history is preserved.",
	"managedClusterClientConfig": "Controller will sync this field to managedcluster's ManagedClusterClientConfigs",
}

func (OCPDistributionInfo) SwaggerDoc() map[string]string {
	return map_OCPDistributionInfo
}

var map_OCPVersionRelease = map[string]string{
	"":         "OCPVersionRelease represents an OpenShift release image and associated metadata. The original definition is from https://github.com/openshift/api/blob/master/config/v1/types_cluster_version.go",
	"version":  "version is a semantic versioning identifying the update version. When this field is part of spec, version is optional if image is specified.",
	"image":    "image is a container image location that contains the update. When this field is part of spec, image is optional if version is specified and the availableUpdates field contains a matching version.",
	"url":      "url contains information about this release. This URL is set by the 'url' metadata property on a release or the metadata returned by the update API and should be displayed as a link in user interfaces. The URL field may not be set for test or nightly releases.",
	"channels": "channels is the set of Cincinnati channels to which the release currently belongs.",
}

func (OCPVersionRelease) SwaggerDoc() map[string]string {
	return map_OCPVersionRelease
}

var map_OCPVersionUpdateHistory = map[string]string{
	"":         "OCPVersionUpdateHistory is a single attempted update to the cluster. the original definition is from https://github.com/openshift/api/blob/master/config/v1/types_cluster_version.go",
	"state":    "state reflects whether the update was fully applied. The Partial state indicates the update is not fully applied, while the Completed state indicates the update was successfully rolled out at least once (all parts of the update successfully applied).",
	"version":  "version is a semantic versioning identifying the update version. If the requested image does not define a version, or if a failure occurs retrieving the image, this value may be empty.",
	"image":    "image is a container image location that contains the update. This value is always populated.",
	"verified": "verified indicates whether the provided update was properly verified before it was installed. If this is false the cluster may not be trusted.",
}

func (OCPVersionUpdateHistory) SwaggerDoc() map[string]string {
	return map_OCPVersionUpdateHistory
}

// AUTO-GENERATED FUNCTIONS END HERE
