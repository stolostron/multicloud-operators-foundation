apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.5.0
  creationTimestamp: null
  name: managedclusterinfos.internal.open-cluster-management.io
spec:
  group: internal.open-cluster-management.io
  names:
    kind: ManagedClusterInfo
    listKind: ManagedClusterInfoList
    plural: managedclusterinfos
    singular: managedclusterinfo
  preserveUnknownFields: false
  scope: Namespaced
  versions:
  - name: v1beta1
    schema:
      openAPIV3Schema:
        description: ManagedClusterInfo represents the information of managed cluster
          that acm hub needs to know
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: Spec defines the information of the Cluster.
            properties:
              loggingCA:
                description: LoggingCA is the ca data for logging server to authorize
                  apiserver
                format: byte
                type: string
              masterEndpoint:
                description: MasterEndpoint shows the apiserver endpoint of managed
                  cluster
                type: string
            type: object
          status:
            description: Status represents the desired status of the Cluster
            properties:
              cloudVendor:
                description: CloudVendor describes the cloud provider for the managed
                  cluster. Deprecated in release 2.3 and will be removed in the future.
                  Use clusterClaim product.open-cluster-management.io instead.
                type: string
              clusterID:
                description: ClusterID is the identifier of managed cluster. Deprecated
                  in release 2.3 and will be removed in the future. Use clusterClaim
                  id.openshift.io instead.
                type: string
              conditions:
                description: Conditions contains condition information for a managed
                  cluster
                items:
                  description: "Condition contains details for one aspect of the current
                    state of this API Resource. --- This struct is intended for direct
                    use as an array at the field path .status.conditions.  For example,
                    \n type FooStatus struct{ // Represents the observations of a
                    foo's current state. // Known .status.conditions.type are: \"Available\",
                    \"Progressing\", and \"Degraded\" // +patchMergeKey=type // +patchStrategy=merge
                    // +listType=map // +listMapKey=type Conditions []metav1.Condition
                    `json:\"conditions,omitempty\" patchStrategy:\"merge\" patchMergeKey:\"type\"
                    protobuf:\"bytes,1,rep,name=conditions\"` \n // other fields }"
                  properties:
                    lastTransitionTime:
                      description: lastTransitionTime is the last time the condition
                        transitioned from one status to another. This should be when
                        the underlying condition changed.  If that is not known, then
                        using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: message is a human readable message indicating
                        details about the transition. This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: observedGeneration represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.conditions[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: reason contains a programmatic identifier indicating
                        the reason for the condition's last transition. Producers
                        of specific condition types may define expected values and
                        meanings for this field, and whether the values are considered
                        a guaranteed API. The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                        --- Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              consoleURL:
                description: ConsoleURL shows the url of console in managed cluster.
                  Deprecated in release 2.3 and will be removed in the future. Use
                  clusterClaim consoleurl.cluster.open-cluster-management.io instead.
                type: string
              distributionInfo:
                description: DistributionInfo is the information about distribution
                  of managed cluster
                properties:
                  ocp:
                    description: OCP is the distribution information of OCP managed
                      cluster, is matched when the Type is OCP.
                    properties:
                      availableUpdates:
                        description: AvailableUpdates contains the list of update
                          versions that are appropriate for the manage cluster. Deprecated
                          in release 2.3 and will be removed in the future. Use VersionAvailableUpdates
                          instead.
                        items:
                          type: string
                        type: array
                      channel:
                        description: Channel is an identifier for explicitly requesting
                          that a non-default set of updates be applied to this cluster.
                          The default channel will be contain stable updates that
                          are appropriate for production clusters.
                        type: string
                      desired:
                        description: desired is the version that the cluster is reconciling
                          towards. If the cluster is not yet fully initialized desired
                          will be set with the information available, which may be
                          an image or a tag.
                        properties:
                          channels:
                            description: channels is the set of Cincinnati channels
                              to which the release currently belongs.
                            items:
                              type: string
                            type: array
                          image:
                            description: image is a container image location that
                              contains the update. When this field is part of spec,
                              image is optional if version is specified and the availableUpdates
                              field contains a matching version.
                            type: string
                          url:
                            description: url contains information about this release.
                              This URL is set by the 'url' metadata property on a
                              release or the metadata returned by the update API and
                              should be displayed as a link in user interfaces. The
                              URL field may not be set for test or nightly releases.
                            type: string
                          version:
                            description: version is a semantic versioning identifying
                              the update version. When this field is part of spec,
                              version is optional if image is specified.
                            type: string
                        type: object
                      desiredVersion:
                        description: DesiredVersion is the version that the cluster
                          is reconciling towards. Deprecated in release 2.3 and will
                          be removed in the future. User Desired instead.
                        type: string
                      lastAppliedAPIServerURL:
                        description: LastAppliedAPIServerURL is a valid URI with scheme
                          'https', address and optionally a port (defaulting to 443).
                          it can be used by components like the web console to tell
                          users where to find the Kubernetes API. This is the api
                          server url that has been applied to the managedcluster resource
                          successfully
                        type: string
                      managedClusterClientConfig:
                        description: Controller will sync this field to managedcluster's
                          ManagedClusterClientConfigs
                        properties:
                          caBundle:
                            description: CABundle is the ca bundle to connect to apiserver
                              of the managed cluster. System certs are used if it
                              is not set.
                            format: byte
                            type: string
                          url:
                            description: URL is the URL of apiserver endpoint of the
                              managed cluster.
                            type: string
                        type: object
                      upgradeFailed:
                        description: UpgradeFailed indicates whether upgrade of the
                          manage cluster is failed. This is true if the status of
                          Failing condition is True and the version is different with
                          desiredVersion in clusterVersion
                        type: boolean
                      version:
                        description: Version is the current version of the OCP cluster.
                          Deprecated in release 2.3 and will be removed in the future.
                          Use clusterClaim version.openshift.io instead.
                        type: string
                      versionAvailableUpdates:
                        description: VersionAvailableUpdates contains the list of
                          updates that are appropriate for this cluster. This list
                          may be empty if no updates are recommended, if the update
                          service is unavailable, or if an invalid channel has been
                          specified.
                        items:
                          description: OCPVersionRelease represents an OpenShift release
                            image and associated metadata. The original definition
                            is from https://github.com/openshift/api/blob/master/config/v1/types_cluster_version.go
                          properties:
                            channels:
                              description: channels is the set of Cincinnati channels
                                to which the release currently belongs.
                              items:
                                type: string
                              type: array
                            image:
                              description: image is a container image location that
                                contains the update. When this field is part of spec,
                                image is optional if version is specified and the
                                availableUpdates field contains a matching version.
                              type: string
                            url:
                              description: url contains information about this release.
                                This URL is set by the 'url' metadata property on
                                a release or the metadata returned by the update API
                                and should be displayed as a link in user interfaces.
                                The URL field may not be set for test or nightly releases.
                              type: string
                            version:
                              description: version is a semantic versioning identifying
                                the update version. When this field is part of spec,
                                version is optional if image is specified.
                              type: string
                          type: object
                        type: array
                      versionHistory:
                        description: VersionHistory contains a list of the most recent
                          versions applied to the cluster. This value may be empty
                          during cluster startup, and then will be updated when a
                          new update is being applied. The newest update is first
                          in the list and it is ordered by recency. Updates in the
                          history have state Completed if the rollout completed -
                          if an update was failing or halfway applied the state will
                          be Partial. Only a limited amount of update history is preserved.
                        items:
                          description: OCPVersionUpdateHistory is a single attempted
                            update to the cluster. the original definition is from
                            https://github.com/openshift/api/blob/master/config/v1/types_cluster_version.go
                          properties:
                            image:
                              description: image is a container image location that
                                contains the update. This value is always populated.
                              type: string
                            state:
                              description: state reflects whether the update was fully
                                applied. The Partial state indicates the update is
                                not fully applied, while the Completed state indicates
                                the update was successfully rolled out at least once
                                (all parts of the update successfully applied).
                              type: string
                            verified:
                              description: verified indicates whether the provided
                                update was properly verified before it was installed.
                                If this is false the cluster may not be trusted.
                              type: boolean
                            version:
                              description: version is a semantic versioning identifying
                                the update version. If the requested image does not
                                define a version, or if a failure occurs retrieving
                                the image, this value may be empty.
                              type: string
                          type: object
                        type: array
                    type: object
                  type:
                    description: Type is the distribution type of managed cluster,
                      is OCP currently
                    type: string
                type: object
              kubeVendor:
                description: KubeVendor describes the kubernetes provider of the managed
                  cluster. Deprecated in release 2.3 and will be removed in the future.
                  Use clusterClaim platform.open-cluster-management.io instead.
                type: string
              loggingEndpoint:
                description: LoggingEndpoint shows the endpoint to connect to logging
                  server of managed cluster
                properties:
                  hostname:
                    description: The Hostname of this endpoint
                    type: string
                  ip:
                    description: The IP of this endpoint. May not be loopback (127.0.0.0/8
                      or ::1), link-local (169.254.0.0/16 or fe80::/10), or link-local
                      multicast (224.0.0.0/24 or ff02::/16).
                    type: string
                  nodeName:
                    description: 'Optional: Node hosting this endpoint. This can be
                      used to determine endpoints local to a node.'
                    type: string
                  targetRef:
                    description: Reference to object providing the endpoint.
                    properties:
                      apiVersion:
                        description: API version of the referent.
                        type: string
                      fieldPath:
                        description: 'If referring to a piece of an object instead
                          of an entire object, this string should contain a valid
                          JSON/Go field access statement, such as desiredState.manifest.containers[2].
                          For example, if the object reference is to a container within
                          a pod, this would take on a value like: "spec.containers{name}"
                          (where "name" refers to the name of the container that triggered
                          the event) or if no container name is specified "spec.containers[2]"
                          (container with index 2 in this pod). This syntax is chosen
                          only to have some well-defined way of referencing a part
                          of an object. TODO: this design is not final and this field
                          is subject to change in the future.'
                        type: string
                      kind:
                        description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                        type: string
                      name:
                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                        type: string
                      namespace:
                        description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                        type: string
                      resourceVersion:
                        description: 'Specific resourceVersion to which this reference
                          is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                        type: string
                      uid:
                        description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                        type: string
                    type: object
                    x-kubernetes-map-type: atomic
                required:
                - ip
                type: object
                x-kubernetes-map-type: atomic
              loggingPort:
                description: LoggingPort shows the port to connect to logging server
                  of managed cluster
                properties:
                  appProtocol:
                    description: "The application protocol for this port. This is
                      used as a hint for implementations to offer richer behavior
                      for protocols that they understand. This field follows standard
                      Kubernetes label syntax. Valid values are either: \n * Un-prefixed
                      protocol names - reserved for IANA standard service names (as
                      per RFC-6335 and https://www.iana.org/assignments/service-names).
                      \n * Kubernetes-defined prefixed names: * 'kubernetes.io/h2c'
                      - HTTP/2 prior knowledge over cleartext as described in https://www.rfc-editor.org/rfc/rfc9113.html#name-starting-http-2-with-prior-
                      * 'kubernetes.io/ws'  - WebSocket over cleartext as described
                      in https://www.rfc-editor.org/rfc/rfc6455 * 'kubernetes.io/wss'
                      - WebSocket over TLS as described in https://www.rfc-editor.org/rfc/rfc6455
                      \n * Other protocols should use implementation-defined prefixed
                      names such as mycompany.com/my-custom-protocol."
                    type: string
                  name:
                    description: The name of this port.  This must match the 'name'
                      field in the corresponding ServicePort. Must be a DNS_LABEL.
                      Optional only if one port is defined.
                    type: string
                  port:
                    description: The port number of the endpoint.
                    format: int32
                    type: integer
                  protocol:
                    default: TCP
                    description: The IP protocol for this port. Must be UDP, TCP,
                      or SCTP. Default is TCP.
                    type: string
                required:
                - port
                type: object
                x-kubernetes-map-type: atomic
              nodeList:
                description: NodeList shows a list of the status of nodes
                items:
                  description: NodeStatus presents the name, labels and conditions
                    of node
                  properties:
                    capacity:
                      additionalProperties:
                        anyOf:
                        - type: integer
                        - type: string
                        pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                        x-kubernetes-int-or-string: true
                      description: Capacity represents the total resources of a node.
                        only includes CPU and memory.
                      type: object
                    conditions:
                      description: Conditions is an array of current node conditions.
                        only includes NodeReady.
                      items:
                        properties:
                          status:
                            description: Status of the condition, one of True, False,
                              Unknown.
                            type: string
                          type:
                            description: Type of node condition.
                            type: string
                        type: object
                      type: array
                    labels:
                      additionalProperties:
                        type: string
                      description: Labels of node.
                      type: object
                    name:
                      description: Name of node
                      type: string
                  type: object
                type: array
              version:
                description: Version is the kube version of managed cluster.
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
