package v1beta1

// This file contains a collection of methods that can be used from go-restful to
// generate Swagger API documentation for its models. Please read this PR for more
// information on the implementation: https://github.com/emicklei/go-restful/pull/215
//
// TODOs are ignored from the parser (e.g. TODO(andronat):... || TODO:...) if and only if
// they are on one line! For multiple line or blocks that you want to ignore use ---.
// Any context after a --- is ignored.
//
// Those methods can be generated by using hack/update-swagger-docs.sh

// AUTO-GENERATED FUNCTIONS START HERE
var map_ManagedClusterView = map[string]string{
	"":         "ManagedClusterView is the view of resources on a managed cluster",
	"metadata": "Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata",
	"spec":     "Spec defines the desired configuration of a view",
	"status":   "Status describes current status of a view",
}

func (ManagedClusterView) SwaggerDoc() map[string]string {
	return map_ManagedClusterView
}

var map_ManagedClusterViewList = map[string]string{
	"":         "ManagedClusterViewList is a list of all the ManagedClusterView",
	"metadata": "Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds",
	"items":    "List of ManagedClusterView objects.",
}

func (ManagedClusterViewList) SwaggerDoc() map[string]string {
	return map_ManagedClusterViewList
}

var map_ViewScope = map[string]string{
	"":                      "ViewScope represents the scope of resources to be viewed",
	"apiGroup":              "Group is the api group of the resources",
	"version":               "Version is the version of the subject",
	"kind":                  "Kind is the kind of the subject",
	"resource":              "Resource is the resource type of the subject",
	"name":                  "Name is the name of the subject",
	"namespace":             "Name is the name of the subject",
	"updateIntervalSeconds": "UpdateIntervalSeconds is the interval to update view",
}

func (ViewScope) SwaggerDoc() map[string]string {
	return map_ViewScope
}

var map_ViewSpec = map[string]string{
	"":      "ViewSpec defines the desired configuration of a view",
	"scope": "Scope is the scope of the view on a cluster",
}

func (ViewSpec) SwaggerDoc() map[string]string {
	return map_ViewSpec
}

var map_ViewStatus = map[string]string{
	"":           "ViewStatus returns the status of the view",
	"conditions": "Conditions represents the conditions of this resource on managed cluster",
	"result":     "Result references the related result of the view",
}

func (ViewStatus) SwaggerDoc() map[string]string {
	return map_ViewStatus
}

// AUTO-GENERATED FUNCTIONS END HERE
