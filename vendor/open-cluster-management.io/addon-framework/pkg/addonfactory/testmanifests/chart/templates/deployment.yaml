{{- if .Values.enabled }}
kind: Deployment
apiVersion: apps/v1
metadata:
  name: {{ template "test.fullname" . }}-addon
  namespace: {{ .Release.Namespace }}
  labels:
    app: {{ template "test.name" . }}-addon
    chart: {{ template "test.chart" . }}
    component: "addon"
    release: {{ .Release.Name }}
    controller: "operator"
    hubKubeConfigSecret: {{ .Values.hubKubeConfigSecret }}
spec:
  {{- if eq .Values.clusterName "local-cluster" }}
  replicas: 3
  {{- else  }}
  replicas: 1
  {{- end }}
  selector:
    matchLabels:
      app: {{ template "test.name" . }}-addon
      component: "addon"
      release: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app: {{ template "test.name" . }}-addon
        component: "addon"
        controller: "operator"
        release: {{ .Release.Name }}
        chart: {{ template "test.chart" . }}
    spec:
      serviceAccountName: {{ template "test.fullname" . }}
      containers:
        - name: test
          image: "{{ .Values.global.imageOverrides.testImage }}"
          imagePullPolicy: "{{ .Values.imagePullPolicy }}"
          resources:
          {{- toYaml .Values.resources | nindent 10 }}
          command: ["test"]
          env:
            - name: WATCH_NAMESPACE
              value: "{{ .Values.clusterName }}"
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: OPERATOR_NAME
              value: "test"
          {{- if .Values.global.proxyConfig.HTTP_PROXY }}
            - name: HTTP_PROXY
              value: {{ .Values.global.proxyConfig.HTTP_PROXY }}
          {{- end }}
          {{- if .Values.global.proxyConfig.HTTPS_PROXY }}
            - name: HTTPS_PROXY
              value: {{ .Values.global.proxyConfig.HTTPS_PROXY }}
          {{- end }}
          {{- if .Values.global.proxyConfig.NO_PROXY }}
            - name: NO_PROXY
              value: {{ .Values.global.proxyConfig.NO_PROXY }}
          {{- end }}
          args:
            - '--enable-lease=true'
          {{- if semverCompare "< 1.14.0" .Capabilities.KubeVersion.Version }}
            - --legacy-leader-elect=true
          {{- end }}
          livenessProbe:
            httpGet:
              path: /healthz
              port: 8081
            failureThreshold: 3
            periodSeconds: 10
          readinessProbe:
            httpGet:
              path: /readyz
              port: 8081
            failureThreshold: 3
            periodSeconds: 10
          volumeMounts:
            - name: klusterlet-config
              mountPath: /var/run/klusterlet
      volumes:
        - name: klusterlet-config
          secret:
            secretName: {{ .Values.hubKubeConfigSecret }}
      {{- if .Values.imagePullSecret }}
      imagePullSecrets:
        - name: "{{ .Values.imagePullSecret }}"
      {{- end }}
      {{- with .Values.global.nodeSelector }}
      nodeSelector:
{{ toYaml . | indent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
{{ toYaml . | indent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
{{ toYaml . | indent 8 }}
      {{- end }}
{{- end }}
